{"version":3,"sources":["../src/index.ts","../src/payment-instruction.ts","../src/utils/errors.ts","../src/utils/format.ts","../src/utils/paseto.ts","../node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js","../node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js","../node_modules/@bufbuild/protobuf/dist/esm/wire/text-encoding.js","../node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js","../src/encoding/protobuf/model.ts","../src/utils/validate.ts"],"sourcesContent":["export * from \"./payment-instruction\";\nexport * from \"./types\";\nexport * from \"./utils\";\n","import * as superstruct from \"superstruct\";\n\nimport {\n  InstructionPayload,\n  ReadOptions,\n  TokenCreateOptions,\n  TokenPublicKeyOptions,\n  UrlPayload,\n} from \"./types\";\nimport {\n  biggerThanOrEqualZero,\n  biggerThanZero,\n  InvalidKepExpired,\n  InvalidPayload,\n  InvalidQrPaymentKeyId,\n  InvalidQrPaymentKeyIssuer,\n  InvalidQrPaymentToken,\n  isAfterDate,\n  MissingKid,\n  MissingKis,\n  MissingSecretKey,\n  PasetoV4Handler,\n} from \"./utils\";\n\n/**\n * Class to handle payment instruction token (qr-crypto token) creation with payload validation\n *\n * @returns\n * `PaymentInstructionsBuilder`\n *\n * @example\n * ```ts\n * const builder = new PaymentInstructionsBuilder();\n * ```\n */\n\nexport class PaymentInstructionsBuilder {\n  private pasetoHandler: PasetoV4Handler;\n\n  constructor() {\n    this.pasetoHandler = new PasetoV4Handler();\n  }\n\n  /**\n   * Create a QR-Crypto token\n   *\n   * @param data - InstructionPayload | UrlPayload;\n   * @param secretKey - string;\n   * @param options - TokenCreateOptions;\n   * @param [warnings=true]\n   *\n   * @returns\n   * `string`\n   *\n   *\n   * @example\n   * ```ts\n   * const builder = new PaymentInstructionsBuilder();\n   *\n   * await builder.create(\n   *   {\n   *     payment: {\n   *       id: \"payment-id\",\n   *       address: \"crypto-address\",\n   *       network_token: \"ntrc20_tTR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\",\n   *       is_open: true,\n   *       expires_at: 1739802610209,\n   *     },\n   *   },\n   *   secretKey: \"some-private-secret\",\n   *   {\n   *     issuer: \"client.com\",\n   *     expiresIn: \"1h\",\n   *     keyId: \"key-id-one\",\n   *     keyExpiration: \"2025-12-12T01:00:00.000Z\",\n   *     keyIssuer: \"my-bussines.com\",\n   *   }\n   * });\n   *\n   * returns\n   * ```ts\n   * \"qr-crypto.v4.public....\"\n   * ```\n   */\n  public async create(\n    data: InstructionPayload | UrlPayload,\n    secretKey: string,\n    options: TokenCreateOptions,\n    warnings = true,\n  ) {\n    this.validateParameters({\n      payload: data,\n      secretKey,\n      optionsKey: {\n        keyId: options.keyId,\n        keyIssuer: options.keyIssuer,\n        keyExpiration: options.keyExpiration,\n      },\n    });\n\n    if (warnings && !options?.expiresIn) {\n      console.warn(\n        `\\x1b[33m[WARNING]\\x1b[0m: Field 'expiresIn' not provided in QR-Crypto token creation.\n         It is recommended to set an expiration time.\n         Use default of 10 minutes.`,\n      );\n    }\n\n    const payload = {\n      data,\n      kid: options.keyId,\n      kis: options.keyIssuer,\n      kep: options.keyExpiration,\n    };\n\n    const pasetoToken = await this.pasetoHandler.sign(payload, secretKey, {\n      issuer: options.issuer,\n      expiresIn: options?.expiresIn || \"10m\",\n      kid: options.keyId,\n      subject: options?.subject,\n      audience: options?.audience,\n      assertion: options?.assertion,\n    });\n\n    return [\"naspip\", options.keyIssuer, options.keyId, pasetoToken].join(\";\");\n  }\n\n  /**\n   * Validate the payload of the payment instruction or url\n   *\n   * @param payload - InstructionPayload | UrlPayload\n   *\n   * @returns\n   * `void` | `Error`\n   *\n   * @example\n   * ```ts\n   * const builder = new PaymentInstructionsBuilder();\n   *\n   * builder.validatePayload({\n   *   payment: {\n   *     id: \"payment-id\",\n   *     address: \"crypto-address\",\n   *     network_token: ntrc20_tTR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,\n   *     is_open: true,\n   *     expires_at: 17855465854,\n   *   },\n   * });\n   * ```\n   */\n  public validatePayload(payload: InstructionPayload | UrlPayload) {\n    if (\"url\" in payload) {\n      return this.validateUrlPayload(payload);\n    }\n\n    this.validatePaymentInstructionPayload(payload);\n  }\n\n  private validateParameters({\n    payload,\n    secretKey,\n    optionsKey,\n  }: {\n    payload: InstructionPayload | UrlPayload;\n    secretKey: string;\n    optionsKey: TokenPublicKeyOptions;\n  }) {\n    if (!secretKey) {\n      throw new MissingSecretKey(\"secretKey is required for token creation\");\n    }\n\n    if (!optionsKey.keyId) {\n      throw new MissingKid(\"kid is required for token creation\");\n    }\n\n    if (!optionsKey.keyIssuer) {\n      throw new MissingKis(\"kis is required for token creation\");\n    }\n\n    const isKeyExpired = isAfterDate(\n      new Date().toISOString(),\n      optionsKey.keyExpiration,\n    );\n\n    if (isKeyExpired) {\n      throw new InvalidKepExpired(\"kid is expired for token creation\");\n    }\n\n    this.validatePayload(payload);\n  }\n\n  /*\n   * Instruction Order Schema\n   */\n  private instructionOrderSchema = superstruct.object({\n    total: superstruct.refine(superstruct.string(), \"total\", biggerThanZero),\n    coin_code: superstruct.string(),\n    description: superstruct.optional(superstruct.string()),\n    merchant: superstruct.object({\n      name: superstruct.string(),\n      description: superstruct.optional(superstruct.string()),\n      tax_id: superstruct.optional(superstruct.string()),\n      image: superstruct.optional(superstruct.string()),\n      mcc: superstruct.optional(superstruct.string()),\n    }),\n    items: superstruct.optional(\n      superstruct.array(\n        superstruct.object({\n          description: superstruct.string(),\n          amount: superstruct.refine(\n            superstruct.string(),\n            \"amount\",\n            biggerThanOrEqualZero,\n          ),\n          unit_price: superstruct.optional(\n            superstruct.refine(\n              superstruct.string(),\n              \"unit_price\",\n              biggerThanOrEqualZero,\n            ),\n          ),\n          quantity: superstruct.refine(\n            superstruct.number(),\n            \"quantity\",\n            biggerThanZero,\n          ),\n          coin_code: superstruct.string(),\n        }),\n      ),\n    ),\n  });\n\n  /**\n   * Payment Instruction Payload Schema\n   *\n   * @private\n   *\n   */\n  private payloadSchema = superstruct.object({\n    payment: superstruct.object({\n      id: superstruct.string(),\n      address: superstruct.string(),\n      address_tag: superstruct.optional(superstruct.string()),\n      unique_asset_id: superstruct.string(),\n      is_open: superstruct.boolean(),\n      amount: superstruct.optional(\n        superstruct.refine(superstruct.string(), \"amount\", biggerThanZero),\n      ),\n      min_amount: superstruct.optional(\n        superstruct.refine(superstruct.string(), \"min_amount\", biggerThanZero),\n      ),\n      max_amount: superstruct.optional(\n        superstruct.refine(superstruct.string(), \"max_amount\", biggerThanZero),\n      ),\n      expires_at: superstruct.integer(),\n    }),\n    order: superstruct.optional(this.instructionOrderSchema),\n  });\n\n  /**\n   * URL Payload Schema\n   *\n   * @private\n   *\n   */\n  private payloadUrlSchema = superstruct.object({\n    url: superstruct.string(),\n    payment_options: superstruct.optional(\n      superstruct.array(superstruct.string()),\n    ),\n    order: superstruct.optional(this.instructionOrderSchema),\n  });\n\n  /**\n   * Validate payload of the payment instruction\n   *\n   * @private\n   * @param payload - InstructionPayload\n   *\n   * @returns\n   * `void` | `Error`\n   */\n  private validatePaymentInstructionPayload(payload: InstructionPayload) {\n    const [errors] = superstruct.validate(payload, this.payloadSchema);\n\n    if (errors) {\n      const [failure] = errors.failures();\n      throw new InvalidPayload(\n        `${errors.path.join(\"_\")}: ${failure?.message ?? \"Payload does not match the expected schema\"}`,\n      );\n    }\n\n    if (!payload.payment.is_open && !payload.payment.amount) {\n      throw new InvalidPayload(\n        \"payment.amount is required when 'is_open' is false\",\n      );\n    }\n  }\n\n  /**\n   * Validate URL Payload\n   *\n   * @private\n   * @param payload - UrlPayload\n   *\n   * @returns\n   * `void` | `Error`\n   */\n  private validateUrlPayload(payload: UrlPayload) {\n    const [errors] = superstruct.validate(payload, this.payloadUrlSchema);\n\n    if (errors) {\n      const [failure] = errors.failures();\n      throw new InvalidPayload(\n        failure?.message ?? \"Payload does not match the expected schema\",\n      );\n    }\n  }\n}\n\n/**\n * Class to handle payment instruction token (qr-crypto token) reading\n *\n * @returns PaymentInstructionsReader\n *\n * @example\n * ```ts\n * const reader = new PaymentInstructionsReader();\n * ```\n */\nexport class PaymentInstructionsReader {\n  private pasetoHandler: PasetoV4Handler;\n\n  constructor() {\n    this.pasetoHandler = new PasetoV4Handler();\n  }\n\n  public decode(qrPayment: string) {\n    const decoded = qrPayment.split(\";\");\n\n    const isValidQr = decoded.length == 4 && decoded[0] == \"naspip\";\n\n    if (!isValidQr) {\n      throw new InvalidQrPaymentToken(\"Invalid naspip token prefix\");\n    }\n\n    const [prefix, keyIssuer, keyId, token] = decoded;\n\n    if (!token) {\n      throw new InvalidQrPaymentToken(\"Invalid naspip token\");\n    }\n\n    return { prefix, keyIssuer, keyId, token };\n  }\n\n  /**\n   * Read a QR payment instruction\n   *\n   * @param qrPayment - QR-Crypto token string\n   * @param publicKey - string\n   * @param options - ConsumeOptions<true> (optional)\n   *\n   * @returns\n   * ```json{\n   *    payload: CompleteResult<InstructionPayload>;\n   *    footer?: Buffer | Record<string, any>;\n   *    version: \"v4\";\n   *    purpose: \"public\";\n   *  }```\n   *\n   *\n   * @example\n   * ```ts\n   * const reader = new PaymentInstructionsReader();\n   *\n   * reader.read({\n   *    qrPayment: \"naspip;keyIssuer;keyId;v4.public....\",\n   *    publicKey: \"some-public-key\",\n   *    issuerDomain: \"qrCrypto.com\",\n   *    options: { subject: \"customer@qrCrypto.com\", audience: \"payer-crypto.com\"}\n   * });\n   *\n   * returns\n   * ```ts\n   * {\n   *   version: \"v4\",\n   *   purpose: \"public\",\n   *   payload: {\n   *    payload: {\n   *      payment: {...},\n   *      order: {....}\n   *    },\n   *    iss: \"qrCrypto.com\",\n   *    iat: \"2024-10-29T21:17:00.000Z\",\n   *    exp: \"2024-10-29T21:25:00.000Z\",\n   *    kid: \"some-kid\",\n   *    kep: \"2025-12-31T00:00:00.000Z\"\n   *    kis: \"some-business.com\"\n   *    sub: \"customer@qrCrypto.com\",\n   *    aud: \"payer-crypto.com\"\n   *   }\n   * }\n   * ```\n   */\n  public async read({\n    qrPayment,\n    publicKey,\n    options,\n  }: {\n    qrPayment: string;\n    publicKey: string;\n    options?: ReadOptions;\n  }) {\n    const decodedQr = this.decode(qrPayment);\n\n    const data = await this.pasetoHandler.verify(decodedQr.token, publicKey, {\n      ...options,\n      complete: true,\n      ignoreExp: false,\n      ignoreIat: false,\n      assertion: publicKey,\n    });\n\n    if (options?.keyId && options.keyId !== data.payload.kid) {\n      throw new InvalidQrPaymentKeyId(\"Invalid Key ID\");\n    }\n\n    if (options?.keyIssuer && options.keyIssuer !== data.payload.kis) {\n      throw new InvalidQrPaymentKeyIssuer(\"Invalid Key Issuer\");\n    }\n\n    if (\n      !options?.ignoreKeyExp &&\n      isAfterDate(new Date().toISOString(), data.payload.kep)\n    ) {\n      throw new InvalidQrPaymentKeyIssuer(\"Invalid Key Issuer\");\n    }\n\n    return data;\n  }\n}\n","const CODES = {\n  InvalidPayload: \"ERR_INVALID_PAYLOAD\",\n  MissingSecretKey: \"ERR_MISSING_SECRET_KEY\",\n  MissingKid: \"ERR_MISSING_KEY_ID\",\n  MissingKis: \"ERR_MISSING_KEY_ISSUER\",\n  InvalidKepExpired: \"ERR_KEY_ID_IS_EXPIRED\",\n  InvalidQrPaymentToken: \"ERR_INVALID_QR_PAYMENT_TOKEN\",\n  InvalidQrPaymentKeyId: \"ERR_INVALID_QR_PAYMENT_KID\",\n  InvalidQrPaymentKeyIssuer: \"ERR_INVALID_QR_PAYMENT_KIS\",\n  InvalidQrPaymentKeyExpired: \"ERR_INVALID_QR_PAYMENT_KEP\",\n  InvalidPasetoClaim: \"ERR_INVALID_PASETO_CLAIM\",\n} as const;\n\nexport class PayInsError extends Error {\n  public code: string;\n\n  constructor(message: string, noColor = false) {\n    super(message);\n    this.name = noColor\n      ? \"[ERROR] \" + this.constructor.name\n      : \"\\x1b[31m[ERROR]\\x1b[0m \" + this.constructor.name;\n    this.code = CODES[this.constructor.name as keyof typeof CODES];\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class InvalidPayload extends PayInsError {}\nexport class MissingSecretKey extends PayInsError {}\nexport class MissingKid extends PayInsError {}\nexport class MissingKis extends PayInsError {}\nexport class InvalidKepExpired extends PayInsError {}\nexport class InvalidQrPaymentToken extends PayInsError {}\nexport class InvalidQrPaymentKeyId extends PayInsError {}\nexport class InvalidQrPaymentKeyIssuer extends PayInsError {}\nexport class InvalidQrPaymentKeyExpired extends PayInsError {}\nexport class InvalidPasetoClaim extends PayInsError {}\n","export function isAfterDate(date1: string, date2: string) {\n  return new Date(date1) > new Date(date2);\n}\n","import ms from \"ms\";\nimport {\n  CompleteResult,\n  ConsumeOptions,\n  decode,\n  ProduceOptions,\n  V4,\n} from \"paseto\";\n\nimport { PasetoTokenData } from \"../encoding/protobuf/model\";\nimport { TokenPayload } from \"../types\";\nimport { InvalidPasetoClaim } from \"./errors\";\n\ntype AsymetricKey = \"paserk\";\ntype PasetoTokenContext = \"public\";\n\nexport class PasetoV4Handler {\n  /*\n\n*/\n\n  /**\n   * Generate asymetric public/private key\n   *\n   * @param purpose - Only support \"public\"\n   * @param options - Only support { format: \"paserk\" }\n   *\n   * @returns\n   * `{ secretKey: string; publicKey: string; }`\n   *\n   *\n   * @example\n   * ```ts\n   * PasetoV4Handler.generateKey(\"public\", { format: \"paserk\" });\n   *\n   * returns\n   * {\n   *   secretKey: 'k4.secret.ICXpik-1FLvjjvspZuFpzudF2WMkjsmBECOkjlNR6lb7C_pYpZkYoB6wW0RTVQTSKNO2kYrL55lxnctEY6fabw',\n   *   publicKey: 'k4.public.-wv6WKWZGKAesFtEU1UE0ijTtpGKy-eZcZ3LRGOn2m8'\n   * }\n   *\n   * ```\n   */\n  public static async generateKey(\n    purpose: PasetoTokenContext,\n    options: { format: AsymetricKey },\n  ) {\n    return V4.generateKey(purpose, options);\n  }\n\n  /**\n   * Decode paseto token\n   *\n   * @param token - paseto token\n   * @returns\n   * `{ ...data, footer: string | Record<string, any> }`\n   */\n\n  public decode(token: string) {\n    const data = decode(token);\n\n    try {\n      const footer = JSON.parse(data.footer?.toString() ?? \"\");\n      return { ...data, footer };\n    } catch {\n      //\n    }\n\n    return { ...data, footer: data.footer?.toString() };\n  }\n\n  /**\n   *\n   * @remarks\n   * Claims reserved\n   *\n   * | Key |    Name        |  Type  |             Example                 |\n   *\n   * | iss |   Issuer       | string |       {\"iss\":\"paragonie.com\"}       |\n   *\n   * | sub |  Subject       | string |            {\"sub\":\"test\"}           |\n   *\n   * | aud |  Audience      | string |       {\"aud\":\"pie-hosted.com\"}      |\n   *\n   * | exp | Expiration     | DtTime | {\"exp\":\"2039-01-01T00:00:00+00:00\"} |\n   *\n   * | nbf | Not Before     | DtTime | {\"nbf\":\"2038-04-01T00:00:00+00:00\"} |\n   *\n   * | iat | Issued At      | DtTime | {\"iat\":\"2038-03-17T00:00:00+00:00\"} |\n   *\n   * | jti |  Token ID      | string |  {\"jti\":\"87IFSGFgPNtQNNuw0AtuLttP\"} |\n   *\n   * | kid |   Key-ID       | string |    {\"kid\":\"stored-in-the-footer\"}   |\n   *\n   * | kis | Key-Issuer     | string |    {\"kis\":\"my-issuer.com\"}          |\n   *\n   * | kep | Key-Expiration | DtTime | {\"kep\":\"2038-03-17T00:00:00+00:00\"} |\n   *\n   *\n   * @param payload - a Record with data to sign\n   * @param privateKey - private key as string\n   * @param options - options for paseto v4 algorimth\n   * @returns\n   * Paseto V4 public token format.\n   */\n  public async sign(\n    payload: TokenPayload,\n    privateKey: string,\n    options?: ProduceOptions,\n  ) {\n    const isUrl = \"url\" in payload.data;\n\n    const payloadWithOptions = this.applyOptions(\n      {\n        kid: payload.kid,\n        kis: payload.kis,\n        kep: payload.kep,\n        data: payload.data,\n      },\n      options,\n    );\n    const payloadProtobuf = PasetoTokenData.fromJSON({\n      ...payloadWithOptions,\n    });\n\n    if (isUrl) {\n      delete payloadProtobuf.instructionPayload;\n    } else {\n      delete payloadProtobuf.urlPayload;\n    }\n\n    const payloadProtobufBinary =\n      PasetoTokenData.encode(payloadProtobuf).finish();\n\n    return V4.sign(Buffer.from(payloadProtobufBinary), privateKey, {\n      footer: options?.footer,\n      assertion: options?.assertion,\n    });\n  }\n\n  /**\n   * Verify paseto token\n   *\n   * @param token - paseto token\n   * @param publicKey - public key as string\n   * @param options - options for paseto v4 algorimth\n   * @returns\n   * Paseto V4 public token format.\n   */\n  public async verify(\n    token: string,\n    publicKey: string,\n    options?: ConsumeOptions<true>,\n  ): Promise<CompleteResult<TokenPayload>> {\n    const result = await V4.verify(token, publicKey, {\n      assertion: options?.assertion,\n      buffer: true,\n      complete: true,\n    });\n\n    const payloadDecoded = PasetoTokenData.decode(result.payload);\n\n    const payload: TokenPayload = PasetoTokenData.toJSON(\n      payloadDecoded,\n    ) as TokenPayload;\n\n    this.assertPayload(payload, options);\n\n    return { ...result, payload };\n  }\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  private applyOptions(\n    payload: Partial<TokenPayload>,\n    options?: ProduceOptions,\n  ) {\n    const now = new Date();\n    const unix = now.getTime();\n\n    payload.iat = new Date(unix).toISOString();\n\n    if (options?.expiresIn) {\n      if (typeof options.expiresIn !== \"string\") {\n        throw new TypeError(\"options.expiresIn must be a string\");\n      }\n\n      payload.exp = new Date(unix + ms(options.expiresIn)).toISOString();\n    }\n\n    if (options?.notBefore) {\n      if (typeof options.notBefore !== \"string\") {\n        throw new TypeError(\"options.notBefore must be a string\");\n      }\n\n      payload.nbf = new Date(unix + ms(options.notBefore)).toISOString();\n    }\n\n    if (options?.audience) {\n      if (typeof options.audience !== \"string\") {\n        throw new TypeError(\"options.audience must be a string\");\n      }\n\n      payload.aud = options.audience;\n    }\n\n    if (options?.issuer) {\n      if (typeof options.issuer !== \"string\") {\n        throw new TypeError(\"options.issuer must be a string\");\n      }\n\n      payload.iss = options.issuer;\n    }\n\n    if (options?.subject) {\n      if (typeof options.subject !== \"string\") {\n        throw new TypeError(\"options.subject must be a string\");\n      }\n\n      payload.sub = options.subject;\n    }\n\n    if (options?.kid) {\n      if (typeof options.kid !== \"string\") {\n        throw new TypeError(\"options.kid must be a string\");\n      }\n\n      payload.kid = options.kid;\n    }\n\n    if (options?.jti) {\n      if (typeof options.jti !== \"string\") {\n        throw new TypeError(\"options.jti must be a string\");\n      }\n\n      payload.jti = options.jti;\n    }\n\n    if (options?.kid) {\n      if (typeof options.kid !== \"string\") {\n        throw new TypeError(\"options.kid must be a string\");\n      }\n\n      payload.kid = options.kid;\n    }\n\n    return payload;\n  }\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  private assertPayload(payload: TokenPayload, options?: ConsumeOptions<true>) {\n    const nowUnix = new Date().getTime();\n\n    // iss\n    if (\"iss\" in payload && typeof payload.iss !== \"string\") {\n      throw new InvalidPasetoClaim(\"payload.iss must be a string\");\n    }\n\n    if (options?.issuer && payload.iss !== options.issuer) {\n      throw new InvalidPasetoClaim(\"issuer mismatch\");\n    }\n\n    // sub\n    if (\"sub\" in payload && typeof payload.sub !== \"string\") {\n      throw new InvalidPasetoClaim(\"payload.sub must be a string\");\n    }\n\n    if (options?.subject && payload.sub !== options.subject) {\n      throw new InvalidPasetoClaim(\"subject mismatch\");\n    }\n\n    // aud\n    if (\"aud\" in payload && typeof payload.aud !== \"string\") {\n      throw new InvalidPasetoClaim(\"payload.aud must be a string\");\n    }\n\n    if (options?.audience && payload.aud !== options.audience) {\n      throw new InvalidPasetoClaim(\"audience mismatch\");\n    }\n\n    // iat\n    if (!options?.ignoreIat) {\n      if (!payload.iat) {\n        throw new InvalidPasetoClaim(\"payload.iat is required\");\n      }\n\n      const iat = new Date(payload.iat).getTime();\n      if (!iat) {\n        throw new InvalidPasetoClaim(\n          \"payload.iat must be a valid ISO8601 string\",\n        );\n      }\n\n      if (iat > nowUnix) {\n        throw new InvalidPasetoClaim(\"token issued in the future\");\n      }\n    }\n    // nbf\n    if (!options?.ignoreNbf && payload.nbf) {\n      const nbf = new Date(payload.nbf).getTime();\n\n      if (!nbf) {\n        throw new InvalidPasetoClaim(\n          \"payload.nbf must be a valid ISO8601 string\",\n        );\n      }\n\n      if (nbf > nowUnix) {\n        throw new InvalidPasetoClaim(\"token is not active yet\");\n      }\n    }\n\n    // exp\n    if (!options?.ignoreExp) {\n      if (!payload.exp) {\n        throw new InvalidPasetoClaim(\"payload.exp is required\");\n      }\n\n      const exp = new Date(payload.exp).getTime();\n      if (!exp) {\n        throw new InvalidPasetoClaim(\n          \"payload.exp must be a valid ISO8601 string\",\n        );\n      }\n\n      if (exp <= nowUnix) {\n        throw new InvalidPasetoClaim(\"token is expired\");\n      }\n    }\n\n    // maxTokenAge\n    if (!options?.ignoreIat && options?.maxTokenAge) {\n      const iat = new Date(payload.iat as string).getTime();\n      if (iat + ms(options.maxTokenAge) < nowUnix) {\n        throw new InvalidPasetoClaim(\"maxTokenAge exceeded\");\n      }\n    }\n  }\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1fffff) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xffffff;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;\n    const high = (hi >> 16) & 0xffff;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return (digitC.toString() +\n        decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA));\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./wire/varint.js\";\n/**\n * Int64Support for the current environment.\n */\nexport const protoInt64 = /*@__PURE__*/ makeInt64Support();\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`invalid int64: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`invalid uint64: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nfunction assertInt64String(value) {\n    if (!/^-?[0-9]+$/.test(value)) {\n        throw new Error(\"invalid int64: \" + value);\n    }\n}\nfunction assertUInt64String(value) {\n    if (!/^[0-9]+$/.test(value)) {\n        throw new Error(\"invalid uint64: \" + value);\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst symbol = Symbol.for(\"@bufbuild/protobuf/text-encoding\");\n/**\n * Protobuf-ES requires the Text Encoding API to convert UTF-8 from and to\n * binary. This WHATWG API is widely available, but it is not part of the\n * ECMAScript standard. On runtimes where it is not available, use this\n * function to provide your own implementation.\n *\n * Note that the Text Encoding API does not provide a way to validate UTF-8.\n * Our implementation falls back to use encodeURIComponent().\n */\nexport function configureTextEncoding(textEncoding) {\n    globalThis[symbol] = textEncoding;\n}\nexport function getTextEncoding() {\n    if (globalThis[symbol] == undefined) {\n        const te = new globalThis.TextEncoder();\n        const td = new globalThis.TextDecoder();\n        globalThis[symbol] = {\n            encodeUtf8(text) {\n                return te.encode(text);\n            },\n            decodeUtf8(bytes) {\n                return td.decode(bytes);\n            },\n            checkUtf8(text) {\n                try {\n                    encodeURIComponent(text);\n                    return true;\n                }\n                catch (e) {\n                    return false;\n                }\n            },\n        };\n    }\n    return globalThis[symbol];\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./varint.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { getTextEncoding } from \"./text-encoding.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n/**\n * Maximum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexport const FLOAT32_MAX = 3.4028234663852886e38;\n/**\n * Minimum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexport const FLOAT32_MIN = -3.4028234663852886e38;\n/**\n * Maximum value for an unsigned 32-bit integer (Protobuf UINT32, FIXED32).\n */\nexport const UINT32_MAX = 0xffffffff;\n/**\n * Maximum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexport const INT32_MAX = 0x7fffffff;\n/**\n * Minimum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexport const INT32_MIN = -0x80000000;\nexport class BinaryWriter {\n    constructor(encodeUtf8 = getTextEncoding().encodeUtf8) {\n        this.encodeUtf8 = encodeUtf8;\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n            this.buf = [];\n        }\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.encodeUtf8(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, decodeUtf8 = getTextEncoding().decodeUtf8) {\n        this.decodeUtf8 = decodeUtf8;\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read;\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-expect-error TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line no-fallthrough\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.decodeUtf8(this.bytes());\n    }\n}\n/**\n * Assert a valid signed protobuf 32-bit integer as a number or string.\n */\nfunction assertInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid int32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > INT32_MAX ||\n        arg < INT32_MIN)\n        throw new Error(\"invalid int32: \" + arg);\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer as a number or string.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid uint32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > UINT32_MAX ||\n        arg < 0)\n        throw new Error(\"invalid uint32: \" + arg);\n}\n/**\n * Assert a valid protobuf float value as a number or string.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg == \"string\") {\n        const o = arg;\n        arg = Number(arg);\n        if (isNaN(arg) && o !== \"NaN\") {\n            throw new Error(\"invalid float32: \" + o);\n        }\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid float32: \" + typeof arg);\n    }\n    if (Number.isFinite(arg) &&\n        (arg > FLOAT32_MAX || arg < FLOAT32_MIN))\n        throw new Error(\"invalid float32: \" + arg);\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.6.1\n//   protoc               v3.12.4\n// source: src/encoding/protobuf/model.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\n\nexport const protobufPackage = \"protobuf\";\n\nexport interface PaymentInstruction {\n  id: string;\n  address: string;\n  addressTag: string;\n  uniqueAssetId: string;\n  isOpen: boolean;\n  amount: string;\n  minAmount: string;\n  maxAmount: string;\n  expiresAt: number;\n}\n\nexport interface InstructionMerchant {\n  name: string;\n  description: string;\n  taxId: string;\n  image: string;\n  mcc: string;\n}\n\nexport interface InstructionItem {\n  description: string;\n  amount: string;\n  coinCode: string;\n  unitPrice: string;\n  quantity: number;\n}\n\nexport interface InstructionOrder {\n  total: string;\n  coinCode: string;\n  description: string;\n  merchant: InstructionMerchant | undefined;\n  items: InstructionItem[];\n}\n\nexport interface InstructionPayload {\n  payment: PaymentInstruction | undefined;\n  order: InstructionOrder | undefined;\n}\n\nexport interface UrlPayload {\n  url: string;\n  paymentOptions: string[];\n  order: InstructionOrder | undefined;\n}\n\nexport interface PasetoTokenData {\n  iss: string;\n  sub: string;\n  aud: string;\n  exp: string;\n  nbf: string;\n  iat: string;\n  jti: string;\n  kid: string;\n  kep: string;\n  kis: string;\n  instructionPayload?: InstructionPayload | undefined;\n  urlPayload?: UrlPayload | undefined;\n}\n\nfunction createBasePaymentInstruction(): PaymentInstruction {\n  return {\n    id: \"\",\n    address: \"\",\n    addressTag: \"\",\n    uniqueAssetId: \"\",\n    isOpen: false,\n    amount: \"\",\n    minAmount: \"\",\n    maxAmount: \"\",\n    expiresAt: 0,\n  };\n}\n\nexport const PaymentInstruction: MessageFns<PaymentInstruction> = {\n  encode(message: PaymentInstruction, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n    if (message.addressTag !== \"\") {\n      writer.uint32(26).string(message.addressTag);\n    }\n    if (message.uniqueAssetId !== \"\") {\n      writer.uint32(34).string(message.uniqueAssetId);\n    }\n    if (message.isOpen !== false) {\n      writer.uint32(40).bool(message.isOpen);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(50).string(message.amount);\n    }\n    if (message.minAmount !== \"\") {\n      writer.uint32(58).string(message.minAmount);\n    }\n    if (message.maxAmount !== \"\") {\n      writer.uint32(66).string(message.maxAmount);\n    }\n    if (message.expiresAt !== 0) {\n      writer.uint32(72).int64(message.expiresAt);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): PaymentInstruction {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePaymentInstruction();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.address = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.addressTag = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.uniqueAssetId = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.isOpen = reader.bool();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.amount = reader.string();\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.minAmount = reader.string();\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.maxAmount = reader.string();\n          continue;\n        }\n        case 9: {\n          if (tag !== 72) {\n            break;\n          }\n\n          message.expiresAt = longToNumber(reader.int64());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PaymentInstruction {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      address: isSet(object.address) ? globalThis.String(object.address) : \"\",\n      addressTag: isSet(object.address_tag) ? globalThis.String(object.address_tag) : \"\",\n      uniqueAssetId: isSet(object.unique_asset_id) ? globalThis.String(object.unique_asset_id) : \"\",\n      isOpen: isSet(object.is_open) ? globalThis.Boolean(object.is_open) : false,\n      amount: isSet(object.amount) ? globalThis.String(object.amount) : \"\",\n      minAmount: isSet(object.min_amount) ? globalThis.String(object.min_amount) : \"\",\n      maxAmount: isSet(object.max_amount) ? globalThis.String(object.max_amount) : \"\",\n      expiresAt: isSet(object.expires_at) ? globalThis.Number(object.expires_at) : 0,\n    };\n  },\n\n  toJSON(message: PaymentInstruction): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.address !== \"\") {\n      obj.address = message.address;\n    }\n    if (message.addressTag !== \"\") {\n      obj.address_tag = message.addressTag;\n    }\n    if (message.uniqueAssetId !== \"\") {\n      obj.unique_asset_id = message.uniqueAssetId;\n    }\n    if (message.isOpen !== false) {\n      obj.is_open = message.isOpen;\n    }\n    if (message.amount !== \"\") {\n      obj.amount = message.amount;\n    }\n    if (message.minAmount !== \"\") {\n      obj.min_amount = message.minAmount;\n    }\n    if (message.maxAmount !== \"\") {\n      obj.max_amount = message.maxAmount;\n    }\n    if (message.expiresAt !== 0) {\n      obj.expires_at = Math.round(message.expiresAt);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<PaymentInstruction>, I>>(base?: I): PaymentInstruction {\n    return PaymentInstruction.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<PaymentInstruction>, I>>(object: I): PaymentInstruction {\n    const message = createBasePaymentInstruction();\n    message.id = object.id ?? \"\";\n    message.address = object.address ?? \"\";\n    message.addressTag = object.addressTag ?? \"\";\n    message.uniqueAssetId = object.uniqueAssetId ?? \"\";\n    message.isOpen = object.isOpen ?? false;\n    message.amount = object.amount ?? \"\";\n    message.minAmount = object.minAmount ?? \"\";\n    message.maxAmount = object.maxAmount ?? \"\";\n    message.expiresAt = object.expiresAt ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseInstructionMerchant(): InstructionMerchant {\n  return { name: \"\", description: \"\", taxId: \"\", image: \"\", mcc: \"\" };\n}\n\nexport const InstructionMerchant: MessageFns<InstructionMerchant> = {\n  encode(message: InstructionMerchant, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.taxId !== \"\") {\n      writer.uint32(26).string(message.taxId);\n    }\n    if (message.image !== \"\") {\n      writer.uint32(34).string(message.image);\n    }\n    if (message.mcc !== \"\") {\n      writer.uint32(42).string(message.mcc);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): InstructionMerchant {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInstructionMerchant();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.taxId = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.image = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.mcc = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): InstructionMerchant {\n    return {\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      taxId: isSet(object.tax_id) ? globalThis.String(object.tax_id) : \"\",\n      image: isSet(object.image) ? globalThis.String(object.image) : \"\",\n      mcc: isSet(object.mcc) ? globalThis.String(object.mcc) : \"\",\n    };\n  },\n\n  toJSON(message: InstructionMerchant): unknown {\n    const obj: any = {};\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.taxId !== \"\") {\n      obj.tax_id = message.taxId;\n    }\n    if (message.image !== \"\") {\n      obj.image = message.image;\n    }\n    if (message.mcc !== \"\") {\n      obj.mcc = message.mcc;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<InstructionMerchant>, I>>(base?: I): InstructionMerchant {\n    return InstructionMerchant.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<InstructionMerchant>, I>>(object: I): InstructionMerchant {\n    const message = createBaseInstructionMerchant();\n    message.name = object.name ?? \"\";\n    message.description = object.description ?? \"\";\n    message.taxId = object.taxId ?? \"\";\n    message.image = object.image ?? \"\";\n    message.mcc = object.mcc ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseInstructionItem(): InstructionItem {\n  return { description: \"\", amount: \"\", coinCode: \"\", unitPrice: \"\", quantity: 0 };\n}\n\nexport const InstructionItem: MessageFns<InstructionItem> = {\n  encode(message: InstructionItem, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.description !== \"\") {\n      writer.uint32(10).string(message.description);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    if (message.coinCode !== \"\") {\n      writer.uint32(26).string(message.coinCode);\n    }\n    if (message.unitPrice !== \"\") {\n      writer.uint32(34).string(message.unitPrice);\n    }\n    if (message.quantity !== 0) {\n      writer.uint32(40).int32(message.quantity);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): InstructionItem {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInstructionItem();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.amount = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.coinCode = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.unitPrice = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.quantity = reader.int32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): InstructionItem {\n    return {\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      amount: isSet(object.amount) ? globalThis.String(object.amount) : \"\",\n      coinCode: isSet(object.coin_code) ? globalThis.String(object.coin_code) : \"\",\n      unitPrice: isSet(object.unit_price) ? globalThis.String(object.unit_price) : \"\",\n      quantity: isSet(object.quantity) ? globalThis.Number(object.quantity) : 0,\n    };\n  },\n\n  toJSON(message: InstructionItem): unknown {\n    const obj: any = {};\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.amount !== \"\") {\n      obj.amount = message.amount;\n    }\n    if (message.coinCode !== \"\") {\n      obj.coin_code = message.coinCode;\n    }\n    if (message.unitPrice !== \"\") {\n      obj.unit_price = message.unitPrice;\n    }\n    if (message.quantity !== 0) {\n      obj.quantity = Math.round(message.quantity);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<InstructionItem>, I>>(base?: I): InstructionItem {\n    return InstructionItem.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<InstructionItem>, I>>(object: I): InstructionItem {\n    const message = createBaseInstructionItem();\n    message.description = object.description ?? \"\";\n    message.amount = object.amount ?? \"\";\n    message.coinCode = object.coinCode ?? \"\";\n    message.unitPrice = object.unitPrice ?? \"\";\n    message.quantity = object.quantity ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseInstructionOrder(): InstructionOrder {\n  return { total: \"\", coinCode: \"\", description: \"\", merchant: undefined, items: [] };\n}\n\nexport const InstructionOrder: MessageFns<InstructionOrder> = {\n  encode(message: InstructionOrder, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.total !== \"\") {\n      writer.uint32(10).string(message.total);\n    }\n    if (message.coinCode !== \"\") {\n      writer.uint32(18).string(message.coinCode);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.merchant !== undefined) {\n      InstructionMerchant.encode(message.merchant, writer.uint32(34).fork()).join();\n    }\n    for (const v of message.items) {\n      InstructionItem.encode(v!, writer.uint32(42).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): InstructionOrder {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInstructionOrder();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.total = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.coinCode = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.merchant = InstructionMerchant.decode(reader, reader.uint32());\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.items.push(InstructionItem.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): InstructionOrder {\n    return {\n      total: isSet(object.total) ? globalThis.String(object.total) : \"\",\n      coinCode: isSet(object.coin_code) ? globalThis.String(object.coin_code) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      merchant: isSet(object.merchant) ? InstructionMerchant.fromJSON(object.merchant) : undefined,\n      items: globalThis.Array.isArray(object?.items) ? object.items.map((e: any) => InstructionItem.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: InstructionOrder): unknown {\n    const obj: any = {};\n    if (message.total !== \"\") {\n      obj.total = message.total;\n    }\n    if (message.coinCode !== \"\") {\n      obj.coin_code = message.coinCode;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.merchant !== undefined) {\n      obj.merchant = InstructionMerchant.toJSON(message.merchant);\n    }\n    if (message.items?.length) {\n      obj.items = message.items.map((e) => InstructionItem.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<InstructionOrder>, I>>(base?: I): InstructionOrder {\n    return InstructionOrder.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<InstructionOrder>, I>>(object: I): InstructionOrder {\n    const message = createBaseInstructionOrder();\n    message.total = object.total ?? \"\";\n    message.coinCode = object.coinCode ?? \"\";\n    message.description = object.description ?? \"\";\n    message.merchant = (object.merchant !== undefined && object.merchant !== null)\n      ? InstructionMerchant.fromPartial(object.merchant)\n      : undefined;\n    message.items = object.items?.map((e) => InstructionItem.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseInstructionPayload(): InstructionPayload {\n  return { payment: undefined, order: undefined };\n}\n\nexport const InstructionPayload: MessageFns<InstructionPayload> = {\n  encode(message: InstructionPayload, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.payment !== undefined) {\n      PaymentInstruction.encode(message.payment, writer.uint32(10).fork()).join();\n    }\n    if (message.order !== undefined) {\n      InstructionOrder.encode(message.order, writer.uint32(18).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): InstructionPayload {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInstructionPayload();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.payment = PaymentInstruction.decode(reader, reader.uint32());\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.order = InstructionOrder.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): InstructionPayload {\n    return {\n      payment: isSet(object.payment) ? PaymentInstruction.fromJSON(object.payment) : undefined,\n      order: isSet(object.order) ? InstructionOrder.fromJSON(object.order) : undefined,\n    };\n  },\n\n  toJSON(message: InstructionPayload): unknown {\n    const obj: any = {};\n    if (message.payment !== undefined) {\n      obj.payment = PaymentInstruction.toJSON(message.payment);\n    }\n    if (message.order !== undefined) {\n      obj.order = InstructionOrder.toJSON(message.order);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<InstructionPayload>, I>>(base?: I): InstructionPayload {\n    return InstructionPayload.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<InstructionPayload>, I>>(object: I): InstructionPayload {\n    const message = createBaseInstructionPayload();\n    message.payment = (object.payment !== undefined && object.payment !== null)\n      ? PaymentInstruction.fromPartial(object.payment)\n      : undefined;\n    message.order = (object.order !== undefined && object.order !== null)\n      ? InstructionOrder.fromPartial(object.order)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseUrlPayload(): UrlPayload {\n  return { url: \"\", paymentOptions: [], order: undefined };\n}\n\nexport const UrlPayload: MessageFns<UrlPayload> = {\n  encode(message: UrlPayload, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.url !== \"\") {\n      writer.uint32(10).string(message.url);\n    }\n    for (const v of message.paymentOptions) {\n      writer.uint32(18).string(v!);\n    }\n    if (message.order !== undefined) {\n      InstructionOrder.encode(message.order, writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UrlPayload {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUrlPayload();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.url = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.paymentOptions.push(reader.string());\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.order = InstructionOrder.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UrlPayload {\n    return {\n      url: isSet(object.url) ? globalThis.String(object.url) : \"\",\n      paymentOptions: globalThis.Array.isArray(object?.payment_options)\n        ? object.payment_options.map((e: any) => globalThis.String(e))\n        : [],\n      order: isSet(object.order) ? InstructionOrder.fromJSON(object.order) : undefined,\n    };\n  },\n\n  toJSON(message: UrlPayload): unknown {\n    const obj: any = {};\n    if (message.url !== \"\") {\n      obj.url = message.url;\n    }\n    if (message.paymentOptions?.length) {\n      obj.payment_options = message.paymentOptions;\n    }\n    if (message.order !== undefined) {\n      obj.order = InstructionOrder.toJSON(message.order);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<UrlPayload>, I>>(base?: I): UrlPayload {\n    return UrlPayload.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UrlPayload>, I>>(object: I): UrlPayload {\n    const message = createBaseUrlPayload();\n    message.url = object.url ?? \"\";\n    message.paymentOptions = object.paymentOptions?.map((e) => e) || [];\n    message.order = (object.order !== undefined && object.order !== null)\n      ? InstructionOrder.fromPartial(object.order)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBasePasetoTokenData(): PasetoTokenData {\n  return {\n    iss: \"\",\n    sub: \"\",\n    aud: \"\",\n    exp: \"\",\n    nbf: \"\",\n    iat: \"\",\n    jti: \"\",\n    kid: \"\",\n    kep: \"\",\n    kis: \"\",\n    instructionPayload: undefined,\n    urlPayload: undefined,\n  };\n}\n\nexport const PasetoTokenData: MessageFns<PasetoTokenData> = {\n  encode(message: PasetoTokenData, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.iss !== \"\") {\n      writer.uint32(10).string(message.iss);\n    }\n    if (message.sub !== \"\") {\n      writer.uint32(18).string(message.sub);\n    }\n    if (message.aud !== \"\") {\n      writer.uint32(26).string(message.aud);\n    }\n    if (message.exp !== \"\") {\n      writer.uint32(34).string(message.exp);\n    }\n    if (message.nbf !== \"\") {\n      writer.uint32(42).string(message.nbf);\n    }\n    if (message.iat !== \"\") {\n      writer.uint32(50).string(message.iat);\n    }\n    if (message.jti !== \"\") {\n      writer.uint32(58).string(message.jti);\n    }\n    if (message.kid !== \"\") {\n      writer.uint32(66).string(message.kid);\n    }\n    if (message.kep !== \"\") {\n      writer.uint32(74).string(message.kep);\n    }\n    if (message.kis !== \"\") {\n      writer.uint32(82).string(message.kis);\n    }\n    if (message.instructionPayload !== undefined) {\n      InstructionPayload.encode(message.instructionPayload, writer.uint32(90).fork()).join();\n    }\n    if (message.urlPayload !== undefined) {\n      UrlPayload.encode(message.urlPayload, writer.uint32(98).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): PasetoTokenData {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePasetoTokenData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.iss = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.sub = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.aud = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.exp = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.nbf = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.iat = reader.string();\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.jti = reader.string();\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.kid = reader.string();\n          continue;\n        }\n        case 9: {\n          if (tag !== 74) {\n            break;\n          }\n\n          message.kep = reader.string();\n          continue;\n        }\n        case 10: {\n          if (tag !== 82) {\n            break;\n          }\n\n          message.kis = reader.string();\n          continue;\n        }\n        case 11: {\n          if (tag !== 90) {\n            break;\n          }\n\n          message.instructionPayload = InstructionPayload.decode(reader, reader.uint32());\n          continue;\n        }\n        case 12: {\n          if (tag !== 98) {\n            break;\n          }\n\n          message.urlPayload = UrlPayload.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PasetoTokenData {\n    return {\n      iss: isSet(object.iss) ? globalThis.String(object.iss) : \"\",\n      sub: isSet(object.sub) ? globalThis.String(object.sub) : \"\",\n      aud: isSet(object.aud) ? globalThis.String(object.aud) : \"\",\n      exp: isSet(object.exp) ? globalThis.String(object.exp) : \"\",\n      nbf: isSet(object.nbf) ? globalThis.String(object.nbf) : \"\",\n      iat: isSet(object.iat) ? globalThis.String(object.iat) : \"\",\n      jti: isSet(object.jti) ? globalThis.String(object.jti) : \"\",\n      kid: isSet(object.kid) ? globalThis.String(object.kid) : \"\",\n      kep: isSet(object.kep) ? globalThis.String(object.kep) : \"\",\n      kis: isSet(object.kis) ? globalThis.String(object.kis) : \"\",\n      instructionPayload: isSet(object.data) ? InstructionPayload.fromJSON(object.data) : undefined,\n      urlPayload: isSet(object.data) ? UrlPayload.fromJSON(object.data) : undefined,\n    };\n  },\n\n  toJSON(message: PasetoTokenData): unknown {\n    const obj: any = {};\n    if (message.iss !== \"\") {\n      obj.iss = message.iss;\n    }\n    if (message.sub !== \"\") {\n      obj.sub = message.sub;\n    }\n    if (message.aud !== \"\") {\n      obj.aud = message.aud;\n    }\n    if (message.exp !== \"\") {\n      obj.exp = message.exp;\n    }\n    if (message.nbf !== \"\") {\n      obj.nbf = message.nbf;\n    }\n    if (message.iat !== \"\") {\n      obj.iat = message.iat;\n    }\n    if (message.jti !== \"\") {\n      obj.jti = message.jti;\n    }\n    if (message.kid !== \"\") {\n      obj.kid = message.kid;\n    }\n    if (message.kep !== \"\") {\n      obj.kep = message.kep;\n    }\n    if (message.kis !== \"\") {\n      obj.kis = message.kis;\n    }\n    if (message.instructionPayload !== undefined) {\n      obj.data = InstructionPayload.toJSON(message.instructionPayload);\n    }\n    if (message.urlPayload !== undefined) {\n      obj.data = UrlPayload.toJSON(message.urlPayload);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<PasetoTokenData>, I>>(base?: I): PasetoTokenData {\n    return PasetoTokenData.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<PasetoTokenData>, I>>(object: I): PasetoTokenData {\n    const message = createBasePasetoTokenData();\n    message.iss = object.iss ?? \"\";\n    message.sub = object.sub ?? \"\";\n    message.aud = object.aud ?? \"\";\n    message.exp = object.exp ?? \"\";\n    message.nbf = object.nbf ?? \"\";\n    message.iat = object.iat ?? \"\";\n    message.jti = object.jti ?? \"\";\n    message.kid = object.kid ?? \"\";\n    message.kep = object.kep ?? \"\";\n    message.kis = object.kis ?? \"\";\n    message.instructionPayload = (object.instructionPayload !== undefined && object.instructionPayload !== null)\n      ? InstructionPayload.fromPartial(object.instructionPayload)\n      : undefined;\n    message.urlPayload = (object.urlPayload !== undefined && object.urlPayload !== null)\n      ? UrlPayload.fromPartial(object.urlPayload)\n      : undefined;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction longToNumber(int64: { toString(): string }): number {\n  const num = globalThis.Number(int64.toString());\n  if (num > globalThis.Number.MAX_SAFE_INTEGER) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  if (num < globalThis.Number.MIN_SAFE_INTEGER) {\n    throw new globalThis.Error(\"Value is smaller than Number.MIN_SAFE_INTEGER\");\n  }\n  return num;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","export function biggerThanZero(value: string | number) {\n  return parseFloat(value.toString()) > 0;\n}\n\nexport function biggerThanOrEqualZero(value: string) {\n  return parseFloat(value) >= 0;\n}\n"],"mappings":"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","names":["CODES","InvalidPayload","MissingSecretKey","MissingKid","MissingKis","InvalidKepExpired","InvalidQrPaymentToken","InvalidQrPaymentKeyId","InvalidQrPaymentKeyIssuer","InvalidQrPaymentKeyExpired","InvalidPasetoClaim","PayInsError","Error","code","constructor","message","noColor","name","captureStackTrace","isAfterDate","date1","date2","Date","varint64read","lowBits","highBits","shift","b","buf","pos","assertBounds","middleByte","Error","varint64write","lo","hi","bytes","i","hasNext","byte","push","splitBits","hasMoreBits","TWO_PWR_32_DBL","int64FromString","dec","minus","slice","base","add1e6digit","begin","end","digit1e6","Number","negate","newBits","int64ToString","bits","negative","result","uInt64ToString","toUnsigned","String","low","mid","high","digitA","digitB","digitC","Math","floor","toString","decimalFrom1e7WithLeadingZeros","digit1e7","partial","length","varint32write","value","varint32read","readBytes","protoInt64","makeInt64Support","dv","DataView","ArrayBuffer","ok","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","process","env","BUF_BIGINT_DISABLE","MIN","MAX","UMIN","UMAX","zero","supported","parse","value","bi","Error","uParse","enc","lo","getInt32","hi","uEnc","dec","setInt32","uDec","toString","assertInt64String","assertUInt64String","int64FromString","int64ToString","uInt64ToString","test","symbol","Symbol","for","getTextEncoding","globalThis","symbol","undefined","te","TextEncoder","td","TextDecoder","encodeUtf8","text","encode","decodeUtf8","bytes","decode","checkUtf8","encodeURIComponent","e","WireType","FLOAT32_MAX","FLOAT32_MIN","UINT32_MAX","INT32_MAX","INT32_MIN","BinaryWriter","constructor","encodeUtf8","getTextEncoding","stack","chunks","buf","finish","length","push","Uint8Array","len","i","bytes","offset","set","fork","join","chunk","prev","pop","Error","uint32","byteLength","raw","tag","fieldNo","type","value","assertUInt32","int32","assertInt32","varint32write","bool","string","float","assertFloat32","DataView","buffer","setFloat32","double","setFloat64","fixed32","setUint32","sfixed32","setInt32","sint32","sfixed64","view","tc","protoInt64","enc","lo","hi","fixed64","uEnc","int64","varint64write","sint64","sign","uint64","BinaryReader","decodeUtf8","varint64","varint64read","varint32read","pos","byteOffset","wireType","skip","start","Varint","Bit64","Bit32","LengthDelimited","StartGroup","fn","wt","EndGroup","undefined","assertBounds","subarray","RangeError","zze","dec","uDec","s","getUint32","getInt32","getFloat32","getFloat64","arg","Number","isInteger","o","isNaN","isFinite","createBasePaymentInstruction","id","address","addressTag","uniqueAssetId","isOpen","amount","minAmount","maxAmount","expiresAt","PaymentInstruction","encode","message","writer","BinaryWriter","uint32","string","bool","int64","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","longToNumber","skip","fromJSON","object","isSet","globalThis","String","address_tag","unique_asset_id","is_open","Boolean","min_amount","max_amount","expires_at","Number","toJSON","obj","Math","round","create","base","fromPartial","createBaseInstructionMerchant","name","description","taxId","image","mcc","InstructionMerchant","tax_id","createBaseInstructionItem","coinCode","unitPrice","quantity","InstructionItem","int32","coin_code","unit_price","createBaseInstructionOrder","total","merchant","items","InstructionOrder","fork","join","v","push","Array","isArray","map","e","createBaseInstructionPayload","payment","order","InstructionPayload","createBaseUrlPayload","url","paymentOptions","UrlPayload","payment_options","createBasePasetoTokenData","iss","sub","aud","exp","nbf","iat","jti","kid","kep","kis","instructionPayload","urlPayload","PasetoTokenData","data","num","toString","MAX_SAFE_INTEGER","Error","MIN_SAFE_INTEGER","value","PasetoV4Handler","generateKey","purpose","options","V4","decode","token","data","footer","JSON","parse","toString","sign","payload","privateKey","isUrl","payloadWithOptions","applyOptions","kid","kis","kep","payloadProtobuf","PasetoTokenData","fromJSON","instructionPayload","urlPayload","payloadProtobufBinary","encode","finish","Buffer","from","assertion","verify","publicKey","result","buffer","complete","payloadDecoded","toJSON","assertPayload","now","Date","unix","getTime","iat","toISOString","expiresIn","TypeError","exp","ms","notBefore","nbf","audience","aud","issuer","iss","subject","sub","jti","nowUnix","InvalidPasetoClaim","ignoreIat","ignoreNbf","ignoreExp","maxTokenAge","biggerThanZero","value","parseFloat","toString","biggerThanOrEqualZero","PaymentInstructionsBuilder","pasetoHandler","constructor","PasetoV4Handler","create","data","secretKey","options","warnings","validateParameters","payload","optionsKey","keyId","keyIssuer","keyExpiration","expiresIn","console","warn","kid","kis","kep","pasetoToken","sign","issuer","subject","audience","assertion","join","validatePayload","validateUrlPayload","validatePaymentInstructionPayload","MissingSecretKey","MissingKid","MissingKis","isKeyExpired","isAfterDate","Date","toISOString","InvalidKepExpired","instructionOrderSchema","object","total","refine","string","biggerThanZero","coin_code","description","optional","merchant","name","tax_id","image","mcc","items","array","amount","biggerThanOrEqualZero","unit_price","quantity","number","payloadSchema","payment","id","address","address_tag","unique_asset_id","is_open","boolean","min_amount","max_amount","expires_at","integer","order","payloadUrlSchema","url","payment_options","errors","validate","failure","failures","InvalidPayload","path","message","PaymentInstructionsReader","decode","qrPayment","decoded","split","isValidQr","length","InvalidQrPaymentToken","prefix","token","read","publicKey","decodedQr","verify","complete","ignoreExp","ignoreIat","InvalidQrPaymentKeyId","InvalidQrPaymentKeyIssuer","ignoreKeyExp"]}